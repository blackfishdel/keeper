<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:jee="http://www.springframework.org/schema/jee" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd 
		http://www.springframework.org/schema/jee http://www.springframework.org/schema/jee/spring-jee.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd 
		http://www.springframework.org/schema/aop   http://www.springframework.org/schema/aop/spring-aop.xsd">

    <description>数据源及事务配置</description>

     <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <!-- 配置连接池属性 -->
        <property name="driverClass" value="${del.jdbc.driver}" />
        <property name="jdbcUrl" value="${del.jdbc.url}" />
        <property name="user" value="${del.jdbc.username}" />
        <property name="password" value="${del.jdbc.password}" />
        <!-- c3p0连接池的私有属性 -->
        <property name="maxPoolSize" value="30" />
        <property name="minPoolSize" value="10" />
        <!-- 关闭连接后不自动commit -->
        <property name="autoCommitOnClose" value="false" />
        <!-- 获取连接超时时间 -->
        <property name="checkoutTimeout" value="10000" />
        <!-- 当获取连接失败重试次数 -->
        <property name="acquireRetryAttempts" value="2" />
    </bean>

    <!-- ************************************************************************************************* -->
    <!-- * 数据源配置 * -->
    <!-- ************************************************************************************************* -->
    <!-- 代理datasource，使其能够显式获取preparedStatement的参数值 -->
    <bean id="proxyDataSource" class="org.jdbcdslog.ConnectionPoolDataSourceProxy">
        <property name="targetDSDirect" ref="dataSource" />
    </bean>

    <!-- ************************************************************************************************* -->
    <!-- * MyBatis 配置 * -->
    <!-- ************************************************************************************************* -->
    <!-- sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="proxyDataSource" />
        <property name="configLocation" value="classpath:/mybatis.xml" />
        <property name="mapperLocations" value="classpath*:/mappers/**/*.xml" />
    </bean>

    <!-- scan for mappers and let them be autowired -->
    <bean name="mapperScannerConfigurer" class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!-- Mapper接口所在包名，Spring会自动查找其下的Mapper -->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
        <property name="basePackage" value="com.del.*.dao" />
    </bean>

    <!-- ************************************************************************************************* -->
    <!-- * 事务配置 * -->
    <!-- ************************************************************************************************* -->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="proxyDataSource" />
    </bean>

    <!-- 使用aop事务 -->
    <tx:advice id="transactionAdvice" transaction-manager="txManager">
        <tx:attributes>
            <tx:method name="*" read-only="false" propagation="REQUIRED" rollback-for="java.lang.Exception" />
        </tx:attributes>
    </tx:advice>

    <!-- <aop:config> -->
    <!-- <aop:pointcut id="pointCutMethod" expression="execution(* com.del.**.service.transaction..*.*(..))" /> -->
    <!-- <aop:advisor advice-ref="transactionAdvice" pointcut-ref="pointCutMethod" /> -->
    <!-- </aop:config> -->

</beans>
